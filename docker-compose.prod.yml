version: '3.8'

services:
  # Backend API
  backend:
    build: ./backend
    container_name: todo-backend
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/todo
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo

  # Frontend aplikacja React  
  frontend:
    build: ./frontend
    container_name: todo-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./certs:/etc/nginx/certs

  # Baza danych MongoDB
  mongo:
    image: mongo:6.0
    container_name: todo-mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}

  # Monitoring - opcjonalnie
  prometheus:
    image: prom/prometheus:latest
    container_name: todo-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: todo-grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  mongo_data:
  prometheus_data:
  grafana_data:
